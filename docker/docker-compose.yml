version: '3.8'

services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./shared/volumes/minio:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"

  # Amanda Backup (Backup & Restore)
  amanda:
    image: norwin/amanda:0.1.59
    container_name: amanda_backup
    volumes:
      - ./shared/volumes/amanda_backup:/var/lib/amanda

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: hamf_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./shared/volumes/postgres:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - ./shared/volumes/elasticsearch:/usr/share/elasticsearch/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./shared/volumes/prometheus:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password
    volumes:
      - ./shared/volumes/grafana:/var/lib/grafana

  # Apache Spark (Data Processing)
  spark:
    image: bitnami/spark
    container_name: hamf_spark
    ports:
      - "8080:8080"
    environment:
      SPARK_MODE: master

  # Slack Integration (kasm_user/password)
  slack:
    image: kasmweb/slack:1.16.0
    container_name: slack_container
    ports:
      - "6901:6901"
    environment:
      - VNC_PW=password
    shm_size: 512m
    stdin_open: true
    tty: true
    restart: unless-stopped
    command: >
      curl -X POST -H 'Content-type: application/json' --data '{"text":"Alert triggered from HAMF"}'
      $SLACK_WEBHOOK_URL

  # Trello (Feedback)
  trello_bot:
    image: integram/trello:latest
    container_name: trello_bot
    ports:
      - "8080:8080"
    environment:
      - BOT_TOKEN=your_bot_token
      - TRELLO_API_KEY=your_trello_api_key
      - TRELLO_TOKEN=your_trello_token
      - TRELLO_BOARD_ID=your_board_id
    restart: unless-stopped
    command: >
      curl -X POST -H 'Content-type: application/json' --data '{"text":"Task created"}'
      $TRELLO_WEBHOOK_URL

  # BookStack (Documentation)
  bookstack:
    image: solidnerd/bookstack:latest
    container_name: hamf_bookstack
    environment:
      DB_HOST: postgres
      DB_DATABASE: hamf_db
      DB_USERNAME: admin
      DB_PASSWORD: password
      APP_URL: http://localhost:8085
    ports:
      - "8085:8085"
    volumes:
      - ./shared/volumes/bookstack_data:/var/www/bookstack

  # Swagger (API Documentation)
  swagger:
    image: swaggerapi/swagger-ui
    container_name: hamf_swagger
    ports:
      - "8081:8081"
    environment:
      SWAGGER_JSON: /swagger/api-docs.json
    volumes:
      - ./shared/volumes/swagger:/swagger
      
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.5.0
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      BACKEND_STORE_URI: postgresql://admin:password@postgres/hamf_db
      DEFAULT_ARTIFACT_ROOT: s3://mlflow/
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    depends_on:
      - postgres
      - minio
    volumes:
      - ./shared/volumes/mlflow:/mlflow

  jupyter:
    image: jupyter/scipy-notebook
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./shared/volumes/jupyter:/home/jovyan/work
    environment:
      JUPYTER_TOKEN: password

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./shared/volumes/nginx:/usr/share/nginx/html

  logstash:
    image: docker.elastic.co/logstash/logstash:8.5.0
    container_name: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./shared/volumes/logstash:/usr/share/logstash/data
    depends_on:
      - elasticsearch

volumes:
  minio:
  postgres:
  elasticsearch:
  prometheus:
  grafana:
  mlflow:
  jupyter:
  nginx:
  logstash:
